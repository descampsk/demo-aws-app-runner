name: CI

on: [pull_request]

jobs:
  lint-and-build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run prettier
      - run: npm run lint
      - run: npm run build
      - run: make docker-build


  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
        branch: [main, branch]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
        if: matrix.branch == 'branch'

      - uses: actions/checkout@v4
        if: matrix.branch == 'main'
        with:
          ref: main

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm install

      - name: Run test
        run: |
          npm run test -- --maxWorkers=2 --coverage --testLocationInResults --json --outputFile=report-${{ matrix.branch }}.json

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report-${{ matrix.branch }}
          path: report-${{ matrix.branch }}.json

  test-coverage:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Download branch code coverage
        uses: actions/download-artifact@v3
        with:
          name: code-coverage-report-branch
          path: .

      - name: Download main codecoverage
        uses: actions/download-artifact@v3
        with:
          name: code-coverage-report-main
          path: .

      - name: Test and coverage
        uses: artiomtr/jest-coverage-report-action@v2.0-rc.4
        with:
          working-directory: .
          coverage-file: ./report-branch.json
          base-coverage-file: ./report-main.json
